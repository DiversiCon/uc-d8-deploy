<?php

/**
 * @file
 * Controls the component showcase functionality.
 */

use Drupal\it_showcase\Showcase;

/**
 * Implements hook_theme().
 */
function it_showcase_theme() {
  return [
    'showcase' => [
      'template' => 'showcase',
      'variables' => [
        'showcase' => [],
        'content' => [],
      ],
    ],
    'showcase-index' => [
      'template' => 'showcase--index',
      'variables' => [
        'showcase' => [],
        'content' => [],
      ],
    ],
  ];
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function it_showcase_theme_suggestions_showcase_alter(array &$suggestions, array $variables) {
  if (isset($variables['showcase']) && $variables['showcase']) {
    $showcase = $variables['showcase'];

    if (isset($showcase['template']) && $showcase['template'] !== 'index') {
      if (isset($showcase['type']) && $showcase['type']) {
        $suggestions[] = 'showcase__' . $showcase['type'];

        // This maintains backward compatibility with legacy suggestions.
        if (isset($showcase['template']) && $showcase['template']) {
          $suggestions[] = 'showcase__' . $showcase['type'] . '__' . $showcase['template'];
        }
      }
      if (isset($showcase['template']) && $showcase['template']) {
        $suggestions[] = 'showcase__' . $showcase['template'];
      }
    }
    else {
      if (isset($showcase['template']) && $showcase['template']) {
        $suggestions[] = 'showcase__' . $showcase['template'];
      }
    }
  }
}

/**
 * Implements hook_preprocess_html().
 *
 * Designed to add body classes to the page based on showcase demands.
 */
function it_showcase_preprocess_html(array &$variables) {
  if ($variables['root_path'] && $variables['root_path'] == 'it') {
    $path = \Drupal::service('path.current')->getPath();
    if (strpos($path, '/it/showcase') === 0) {
      $body_classes = Showcase::it_showcase_body_classes();
      if ($body_classes) {
        $variables['it_showcase_body_classes'] = implode(' ', $body_classes);
      }
    }
  }
}
