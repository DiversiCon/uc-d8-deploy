<?xml version="1.0"?>
<!--
   To override this file, copy it to phpcs.xml and then modify.
   @see https://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-ruleset.xml#the-annotated-sample-file
-->
<ruleset name="blt">
  <description>BLT PHP_CodeSniffer standards overrides.</description>

  <!-- By default, warnings and errors cause an exception. -->
  <config name="ignore_warnings_on_exit" value="0" />
  <config name="ignore_errors_on_exit" value="0" />

  <!-- Set ignore extensions. -->
  <!-- @see https://www.drupal.org/node/2867601#comment-12075633 -->
  <arg name="ignore" value="*.css,*.md,*.txt,*.png,*.gif,*.jpeg,*.jpg,*.svg"/>

  <!-- Use colors in output. -->
  <arg name="colors"/>
  <!-- Show progress. -->
  <arg value="p"/>

  <!-- Include existing standards. -->
  <rule ref="Drupal"/>
  <rule ref="DrupalPractice">
    <!-- Ignore specific sniffs. -->
    <exclude name="DrupalPractice.InfoFiles.NamespacedDependency"/>
  </rule>

  <!-- Include phpcs-security-audit (https://github.com/FloeDesignTechnologies/phpcs-security-audit) -->
  <rule ref="vendor/pheromone/phpcs-security-audit/Security"/>
  <!-- Security Code Reviews Rules -->

  <!-- Global properties -->
  <!-- Please note that not every sniff uses them and they can be overwritten by rule -->
  <!-- Paranoia mode: Will generate more alerts but will miss less vulnerabilites. Good for assisting manual code review. -->
  <config name="ParanoiaMode" value="1"/>

  <!-- BadFunctions -->
  <!-- PHP functions that can lead to security issues -->
  <rule ref="Security.BadFunctions.Asserts"/>
  <rule ref="Security.BadFunctions.Backticks"/>
  <rule ref="Security.BadFunctions.CallbackFunctions"/>
  <rule ref="Security.BadFunctions.CryptoFunctions"/>
  <rule ref="Security.BadFunctions.EasyRFI"/>
  <rule ref="Security.BadFunctions.EasyXSS">
    <properties>
      <!-- Comment out to follow global ParanoiaMode -->
      <property name="forceParanoia" value="1"/>
    </properties>
  </rule>
  <rule ref="Security.BadFunctions.ErrorHandling"/>
  <rule ref="Security.BadFunctions.FilesystemFunctions"/>
  <rule ref="Security.BadFunctions.FringeFunctions"/>
  <rule ref="Security.BadFunctions.FunctionHandlingFunctions"/>
  <rule ref="Security.BadFunctions.Mysqli"/>
  <rule ref="Security.BadFunctions.NoEvals"/>
  <rule ref="Security.BadFunctions.Phpinfos"/>
  <rule ref="Security.BadFunctions.PregReplace"/>
  <rule ref="Security.BadFunctions.SQLFunctions"/>
  <rule ref="Security.BadFunctions.SystemExecFunctions"/>

  <!-- CVE -->
  <!-- Entries from CVE database from vendor PHP and bugs.php.net -->
  <rule ref="Security.CVE.20132110"/>
  <rule ref="Security.CVE.20134113"/>

  <!-- Misc -->
  <rule ref="Security.Misc.BadCorsHeader"/>
  <rule ref="Security.Misc.IncludeMismatch"/>

  <file>blt/src</file>
  <file>docroot/modules/custom</file>
  <file>docroot/themes/custom</file>
  <file>tests</file>

  <exclude-pattern>*.js</exclude-pattern>
  <exclude-pattern>*/behat</exclude-pattern>
  <exclude-pattern>*/node_modules</exclude-pattern>
  <exclude-pattern>*/vendor</exclude-pattern>
  <exclude-pattern>*/uc_migrate</exclude-pattern>

</ruleset>
